<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[node(一)]]></title>
      <url>%2F2017%2F03%2F01%2Fnode-%E4%B8%80%2F</url>
      <content type="text"><![CDATA[开始正式学习node，之前看过node即学即用，敲了遍书上的代码，有点晕晕的，之后很长时间没接触node了，现在下决心每天花些时间捣鼓下。 写在前面在这里主要是记笔记，按照教程尝试搭建使用 Express + MongoDB 搭建多人博客，记录些要点和体会 参考了使用 Express + MongoDB 搭建多人博客 安装配置环境 安装nodejs，LTS是长期支持版本，current是最新版，支持最新语言特性(比如更全的es6) n和nvm是两个常用的nodejs版本管理工具，nvm不支持windows 参考这个还有阮一峰老师的es6入门 nrm管理npm源的工具，目测修改了源之后npm==cnpm了 安装mongoDB遇到一个坑，执行 &quot;C:\Program Files\MongoDB\Server\3.4\bin\mongod.exe&quot; --dbpath F:\practice\mongo 报错 $ &quot;C:\Program Files\MongoDB\Server\3.4\bin\mongod.exe&quot; --dbpath F:\practice\mongo 17-03-02T14:55:01.854+0800 I CONTROL [initandlisten] MongoDB starting : d=7440 port=27017 dbpath=F:practicemongo 64-bit host=DESKTOP-KP92M3V 17-03-02T14:55:01.855+0800 I CONTROL [initandlisten] targetMinOS: Windows 7/ ndows Server 2008 R2 17-03-02T14:55:01.855+0800 I CONTROL [initandlisten] db version v3.4.2 17-03-02T14:55:01.855+0800 I CONTROL [initandlisten] git version: 76e40c105fc223b3e5aac3e20dcd026b83b38b 17-03-02T14:55:01.855+0800 I CONTROL [initandlisten] OpenSSL version: enSSL 1.0.1u-fips 22 Sep 2016 17-03-02T14:55:01.855+0800 I CONTROL [initandlisten] allocator: tcmalloc 17-03-02T14:55:01.855+0800 I CONTROL [initandlisten] modules: none 17-03-02T14:55:01.855+0800 I CONTROL [initandlisten] build environment: 17-03-02T14:55:01.855+0800 I CONTROL [initandlisten] distmod: 08plus-ssl 17-03-02T14:55:01.855+0800 I CONTROL [initandlisten] distarch: x86_64 17-03-02T14:55:01.855+0800 I CONTROL [initandlisten] target_arch: x86_64 17-03-02T14:55:01.855+0800 I CONTROL [initandlisten] options: { storage: { Path: &quot;F:practicemongo&quot; } } 17-03-02T14:55:01.855+0800 I STORAGE [initandlisten] exception in itAndListen: 29 Data directory F:practicemongo not found., terminating 17-03-02T14:55:01.855+0800 I NETWORK [initandlisten] shutdown: going to ose listening sockets... 17-03-02T14:55:01.855+0800 I NETWORK [initandlisten] shutdown: going to ush diaglog... 17-03-02T14:55:01.855+0800 I CONTROL [initandlisten] now exiting 17-03-02T14:55:01.855+0800 I CONTROL [initandlisten] shutting down with de:100 说F:practicemongo not found，不知道为什么会这样，直接执行 &quot;C:\Program Files\MongoDB\Server\3.4\bin\mongod.exe&quot; 又说 F:\data\db\ not found. 我就只好在F盘下新建data\db，然后就成功了 打开Robomongo,Robomongo 是一个基于 Shell 的跨平台开源 MongoDB 可视化管理工具，支持 Windows、Linux 和 Mac，嵌入了 JavaScript 引擎和 MongoDB mongo， 试着插入一条数据结果不知道怎样看不到了]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[value和ng-value]]></title>
      <url>%2F2017%2F02%2F23%2Fvalue%E5%92%8Cng-value%2F</url>
      <content type="text"><![CDATA[开年第一篇，前两周赶进度特别忙，基本重构了整个系统，也踩了不少的坑，其中就有angular指令ng-value和value这俩货 类似的还有ng-disabled和disabled等 官方给出说ngValue]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[账户系统前端小规范]]></title>
      <url>%2F2017%2F01%2F10%2F%E8%B4%A6%E6%88%B7%E7%B3%BB%E7%BB%9F%E5%89%8D%E7%AB%AF%E5%B0%8F%E8%A7%84%E8%8C%83%2F</url>
      <content type="text"><![CDATA[为了后来的开发维护方便，在此写下账户系统前端部分的概述，包括所用框架，依赖，管理工具，命名规范，项目结构等，后面有时间也会总结下前端开发的规范。 所用框架系统所用框架为angular1.3版本，为2016年之前主流版本，前端这几年涌现了太多框架，自己熟悉了这个版本后也要跟上时代的步伐，学习angular2等 依赖angular参照Java搞出了依赖注入和指令，系统的依赖注入和个部分功能解释如下 ui-routerangular1.x 本身有ng-router，但是满足不了复杂的应用，系统采用的依赖为ui-router，ui-router具体用法配置和其自带的指令会单独讲一下。 管理工具包管理工具用了gulp，主要执行如下功能 css压缩js压缩 注意，为了避免压缩时注入的部分被误识别为变量部分，从而导致替换，应写成数组格式的依赖注入，特别是系统采用的angular-ui的modal服务，在实例化时也要写成数组格式的注入，分别如下 1.控制器初始化 var appModule=angular.module(&quot;app&quot;,[]) appModule.controller(&quot;controllerName&quot;, [&quot;dev1&quot;,&quot;dev2&quot;,function(dev1,dev2){ //controller body here }]) 2.举例modal模态框的 var modalInstance =$modal.open({ //配置部分,只显示modal控制器配置，我懒 controller:modalController }) //by the way 这里可以写modalInstance的promise //初始化modal的控制器，采用数组格式的依赖注入 var modalController =[&quot;dev1&quot;,&quot;dev2&quot;,function(dev1,dev2){ }] 扯远了，那个modal的作用域独立，要resolve进来数据或方法 去注释去空格图片压缩命名规范 这里只针对本系统给出一定的规范 控制器js文件和模板html名字相同，参照ui-router的命名结构，并相应的将点替换为下短横,ui-sref指令的值命名如下在如总模板页为app,其下的一级菜单为app.Level1NavName,一级菜单下的二级菜单为app.Level1NavName.level2NavName,可参考config.router.js文件的配置，三级相同命名。相应的文件命名Level1NavName_level2NavName.js/html 其中Level1NavName和Level2NavName全系统唯一，注意路由配置的url属性，表现为URL层级 madal弹出框的templete命名为触发事件函数的名称，controller属性的名称命名为函数名加Ctrl，例如 $scope.appRegisterEdit=function(row){ var myrow=row.entity; console.log(myrow); var modalInstance = $modal.open({ templateUrl: &apos;appRegisterEdit.html&apos;, controller: appRegisterEditCtrl, resolve: { items: function () { return myrow; }, shuaxing: function(){ return $scope.shuaxing; }, pop:function(){ return $scope.pop; } } }); modalInstance.result.then(function () { }, function () { $scope.shuaxing(); }); } 项目结构]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[2016小小结]]></title>
      <url>%2F2017%2F01%2F10%2F2016%E5%B0%8F%E5%B0%8F%E7%BB%93%2F</url>
      <content type="text"><![CDATA[2016年结束了，回头看来这年经历可真是丰富啊，没去考研，感觉整年都在弥补我的过错，现在想想都觉得我真是太废了，1月6号开始决定敲代码，翻开人生第一本代码书–超简单的headfirst-html。过年因为家庭问题也没有回家，初二便跑回学校，记得当时贝岗只有M记开门（而且还只有我最讨厌的香辣堡卖），真是对自己的惩罚，希望自己能多多记住这种感觉 学习部分总结下今年看的书技术上1.headfirst-html和css，自己看完的第一本代码书，按照示例敲出了第一个静态页面，现在想想真是挺适合入门的，讲的简单生动2.headfirst-html5,这个看了一半，倒是对html5有了比较浅的了解3.javascript高级程序设计，这个看了一半，必读书籍，新的一年准备和犀牛书再啃一遍4.css权威教程，读了大半，也是当做工具书，需要就去查，很详细5.jq基础，挑着读了些，很多时候需要用到时跑去查找 others1.中国缺了一味药，感觉有些心酸2.时间简史，看了一点点，感觉还是值得一看，全民科普类书籍3.相对论并非遥不可及，写的相当赞，我竟然看懂啦4.常识，托马斯潘恩的，据说是美国独立战争的反动小册子，感觉看着翻译的版本有点怪5.知乎上收藏了一大把的东西 学到的技术1.前端基础html,css相比较看的较多，js和jq就不够了，自己明白js很重要，2.bootstrap，这个也只能算了解，其核心网格系统也只是勉强会用3.angular，想想听到老大说用angular搭建项目时的一脸懵逼，只能硬着头皮上了，现在也只能说是刚入门，框架自身变化也快，此外第三方的库，angular-ui，ui-router，oclazyload，ng-grid也多少了解些4.ui-grid这个拿出来单独说，因为这个要替代ng-grid了，而且其功能更强大，我也打算将angular项目中的表格替换为ui-grid5.Git，只会些简单的命令，倒是对其了解了些6.gulp，倒是自己尝试配了些简单的命令， 这一年接触的东西不少，深究起来真正懂的一个都没有，这也是下年需要改进的地方 生活部分 啊哈，还是单身单身，欣慰的是毕业后能和大学好盆友暂时住在一起，延续了些大学的味道，嗯，尝试做了很多次饭（虽然是最简单的烤面包片加鸡蛋），把自己的房间认真装了下，拍死了不少小强，开始独立自己买衣服，年末开始锻炼身体了 当然，这一年还有个大事件就是我毕业啦，感觉吧，不开心 工作部分在安正实习了下，跑到海豚啦，氛围很好，师兄很赞，还有一堆大学的小伙伴 吸取的教训最大的教训就是最后没去考研，一直以来觉得自己可以坦然面对一些事，现在发现还真是高估了自己，发觉自己还是太容易受环境影响，内心对未知有种惧怕，自己很多时候是准备不足。这种挫败感真是太大了，自己远不如想象的成熟 新一年给自己js很重要，新的一年要重新弄下，1.身体很重要，多跑跑步，可以的话，去健身房吧2.英语3.php，体验下世界上最好的语言]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[angular基础]]></title>
      <url>%2F2016%2F12%2F26%2Fangular%E5%9F%BA%E7%A1%80%2F</url>
      <content type="text"><![CDATA[接触angular已经近半年了，一直在用别人的指令改改，遇到了很多自己解决不了的坑，其实自己对angular的各部分了解并不多，现在回头来弄清其中的用法原理，打好自己的基础。 准备从如下几个部分展开，每个部分放出参考文章链接以及代码仓库地址 指令1.学习例子参考大漠老师的5个实例详解指令机制 2.angular指令的transclude选项以及ng-transclude指令 服务angular核心angular原理]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[angular杂谈]]></title>
      <url>%2F2016%2F12%2F26%2Fangular%E6%9D%82%E8%B0%88%2F</url>
      <content type="text"><![CDATA[这里来记一些angular相关的东西 驼峰命名直接上例子，指令中的命名 var appModule=angular.module(&apos;app&apos;,[]); appModule.directive(&apos;helloWorld&apos;,function(){ return{ restrict:&apos;e&apos;, template:&apos;&lt;div&gt;hello world~&lt;/div&gt;&apos;, replace:true }; }) html中 &lt;hello-world&gt;&lt;/hello-world&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[sublime 安装小结]]></title>
      <url>%2F2016%2F12%2F22%2Fsublime-%E5%AE%89%E8%A3%85%E5%B0%8F%E7%BB%93%2F</url>
      <content type="text"><![CDATA[sublime 3sublime大家都知道啦，用了近一年了，感情颇深。之前用了sublime2，感觉最大的不同是sublime3的启动速度飞快，之后一直在用别人放出来装了各种插件的3，结果近几个月想要下载新的插件时发现竟然装不了，哈，值此一周年之际，自己重新捣鼓下3. 安装安装就不多说了，官网sublime3下载。 需要注意，最好在翻墙状态下，反正我没翻墙下不了。 安装可以选中explorer context menu选项，意思是右击时显示open with sublime，方便编辑，不想显示中文可以去注册表改一下 重点来了，额，不购买的话会一直提示，比较烦 最好有条件还是支持正版 在简书上看到注册码sublime3注册码博主也在定期更新（非常感谢大神，大神的博客很赞）。help中填入注册码就行啦 留一下，有好几个的，填一个就行啦 插件插件安装 直接装 preferences&gt;browse packages… 下载地址：package control 放进去: 建议用这个方法，我试了用console命令报错 好像是can not open XXX,换了另外一个网上的命令可以下，但是速度很慢 用package control组件安装 这个不多说啦，附上官方介绍 packagecontrol installation 推荐插件 这里只记录我接触到的 插件的安装嘛，ctrl+shift+p调出控制台，选到package controll install，然后等，再次弹出控制台输入想要安装的插件，选中 安装 等待 注意要留意下方的状态 emmet神器，谁用谁知道，补全代码等等，附上用法Emmet markdownEditing这个用来写博客，记得先ctrl+shift+p设置成markdown格式，写这篇文就遇到个坑，我用的markdownpad的图床是 Imgur，额，不翻墙上传不了图片 angular对于指令和服务，鼠标移上去可以看到初始化的地方 sublimeLinter语法错误检测， SideBarEnhancements侧栏右键功能增强 Alignment等号对齐（Ctrl+Alt+A） Bracket Highlighter代码匹配 prettifyHTML-CSS-JS Prettify code format 代码格式化 持续更新中 …]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[My First Post]]></title>
      <url>%2F2016%2F12%2F22%2FMy-First-Post%2F</url>
      <content type="text"><![CDATA[**试试 发一篇试试效果]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2016%2F12%2F22%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
